// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MondialMunch;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MondialMunch.Migrations
{
    [DbContext(typeof(MondialMunchContext))]
    [Migration("20240427151346_0cdbe40a555c")]
    partial class _0cdbe40a555c
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DietaryTagRecipe", b =>
                {
                    b.Property<int>("TaggedRecipesId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TagsId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("TaggedRecipesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("DietaryTagRecipe");
                });

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Quantity")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("MondialMunch.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("MondialMunch.DietaryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("DietaryTag");
                });

            modelBuilder.Entity("MondialMunch.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryCurrentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CountryOriginId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("_password")
                        .IsRequired()
                        .HasColumnType("RAW(2000)")
                        .HasColumnName("Password");

                    b.Property<byte[]>("_salt")
                        .IsRequired()
                        .HasColumnType("RAW(2000)")
                        .HasColumnName("Salt");

                    b.HasKey("Id");

                    b.HasIndex("CountryCurrentId");

                    b.HasIndex("CountryOriginId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CookingTime")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("CountryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("PrepTime")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("Servings")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Stars")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeInstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeInstruction");
                });

            modelBuilder.Entity("RecipeUser", b =>
                {
                    b.Property<int>("FavouriteRecipiesId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("FavouriteUsersId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("FavouriteRecipiesId", "FavouriteUsersId");

                    b.HasIndex("FavouriteUsersId");

                    b.ToTable("RecipeUser");
                });

            modelBuilder.Entity("RecipeUser1", b =>
                {
                    b.Property<int>("TodoRecipiesId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TodoUsersId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("TodoRecipiesId", "TodoUsersId");

                    b.HasIndex("TodoUsersId");

                    b.ToTable("RecipeUser1");
                });

            modelBuilder.Entity("DietaryTagRecipe", b =>
                {
                    b.HasOne("Recipe", null)
                        .WithMany()
                        .HasForeignKey("TaggedRecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MondialMunch.DietaryTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.HasOne("Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("MondialMunch.User", b =>
                {
                    b.HasOne("MondialMunch.Country", "CountryCurrent")
                        .WithMany()
                        .HasForeignKey("CountryCurrentId");

                    b.HasOne("MondialMunch.Country", "CountryOrigin")
                        .WithMany()
                        .HasForeignKey("CountryOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryCurrent");

                    b.Navigation("CountryOrigin");
                });

            modelBuilder.Entity("Recipe", b =>
                {
                    b.HasOne("MondialMunch.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MondialMunch.User", "Creator")
                        .WithMany("PersonalRecipes")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Country");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("RecipeInstruction", b =>
                {
                    b.HasOne("Recipe", null)
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("RecipeUser", b =>
                {
                    b.HasOne("Recipe", null)
                        .WithMany()
                        .HasForeignKey("FavouriteRecipiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MondialMunch.User", null)
                        .WithMany()
                        .HasForeignKey("FavouriteUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipeUser1", b =>
                {
                    b.HasOne("Recipe", null)
                        .WithMany()
                        .HasForeignKey("TodoRecipiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MondialMunch.User", null)
                        .WithMany()
                        .HasForeignKey("TodoUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MondialMunch.User", b =>
                {
                    b.Navigation("PersonalRecipes");
                });

            modelBuilder.Entity("Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");
                });
#pragma warning restore 612, 618
        }
    }
}
